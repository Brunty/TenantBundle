#!/bin/bash
set -e

shutdown() {
    # Get our process group id
    PGID=$(ps -o pgid= $$ | grep -o [0-9]*)

    # Kill it in a new new process group
    setsid kill -- -$PGID
    exit 0
}

trap "shutdown" EXIT

usage()
{
cat << EOF
usage: $0 options

Run a console command for multiple tenants

OPTIONS:
   -h      Show this message
   -t      Manually specify the tenants (comma separated)
   -P      Number of parallel processes
   -v      Verbose
   -e      Fallback to this environment if there are no tenants
EOF
}

TENANTS=
PROCESSES=1
VERBOSE=

while getopts "ht:P:ve:" OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         t)
             TENANTS=$(echo "$OPTARG" | tr " ;," "\n")
             ;;
         P)
             PROCESSES=$OPTARG
             ;;
         v)
             VERBOSE="-t"
             ;;
         e)
             ENVIRONMENT="-e $OPTARG"
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

# Shift all processed options away
shift $((OPTIND-1))

# No tenants specified, pull them from the kernel
if [ "$TENANTS" = "" ]
then
    # Someday this might validate the tenants with something like:
    # comm -12 <(echo "$TENANTS" | tr " ;," "\n") <($BINARY vivait:tenants:list) | xargs -n1 echo

    # Check for `php app/console` vs `app/console`
    if [ -f "$2" ]
    then
        BINARY="$1 $2"
    else
        BINARY="$1"
    fi

    TENANTS=$($BINARY vivait:tenants:list $ENVIRONMENT)

    if [ "$TENANTS" = "" ] && [ "$ENVIRONMENT" != "" ]
    then
        $@ $ENVIRONMENT
    fi
fi

# OS X doesn't support unlimited processes so match the number of tenants
if [ "$PROCESSES" -eq 0 ]
then
    PROCESSES=$(echo "$TENANTS" | wc -w)
fi

echo "$TENANTS" | xargs -P$PROCESSES $VERBOSE -I{} $@ -e=tenant_{} --no-debug
